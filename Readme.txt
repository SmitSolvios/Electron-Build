
electron-builder create-self-signed-cert -p 77Z

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

https://stackoverflow.com/questions/63001117/how-to-read-from-env-file-in-electron-builder-yaml-config-file

{
  "name": "beta-botiga",
  "version": "1.1.5",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "electron": "set ELECTRON_DEV=true && electron .",
    "buildold": "set ELECTRON_DEV=false && electron-builder -w -c.releaseInfo.releaseNotes=\"new features\"",
    "localbuild": "set ELECTRON_DEV=false && electron-builder -w",
    "build": "set ELECTRON_DEV=false && electron-builder -w -c ./builder-config.yaml --publish always",
    "release": "build -p \"always\"",
    "gitrelease": "electron-builder create-self-signed-cert -p 77z",
    "test123": "GH_TOKEN=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 npm run release",
    "test124": "GH_TOKEN=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 npm run release"
  },
  "repository": "https://github.com/SmitSolvios/Electron-Build",
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^0.27.2",
    "custom-electron-titlebar": "^4.1.0",
    "dns": "^0.2.2",
    "electron-dl": "^3.5.0",
    "electron-log": "^4.4.8",
    "electron-pos-printer": "^1.3.6",
    "electron-progressbar": "^2.0.1",
    "electron-reload": "^2.0.0-alpha.1",
    "electron-store": "^8.1.0",
    "electron-updater": "^5.2.1",
    "electron-virtual-keyboard": "^1.0.7",
    "getmac": "^5.20.0",
    "jsbarcode": "^3.11.5",
    "local-devices": "^4.0.0",
    "moment": "^2.29.4",
    "node-machine-id": "^1.1.12",
    "nodemon": "^2.0.21",
    "pdf-to-printer": "^5.6.0",
    "ping": "^0.4.4",
    "serial-number": "^1.3.0"
  },
  "devDependencies": {
    "electron": "^19.0.8",
    "electron-builder": "^23.3.3"
  },
  "build": {
    "extraResources": ["./extraResources/**"],
    "extraFiles":["lib"],
    "extends": null,
    "productName": "BetaBotiga",
    "appId": "org.erb.BetaBotiga",
    "publish": {
      "provider": "github"
    },
    "win": {
      "requestedExecutionLevel": "highestAvailable",
      "icon": "./assets/images/icon256.png",
      "publisherName": "77z",
      "certificateFile": "77z.pfx",
      "certificatePassword": "",
      "verifyUpdateCodeSignature": "false",
      "publish": {
        "provider": "github"
      },
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ]
    }
  }
}


appId: 'github.com/vladimiry/ElectronMail'
artifactName: ${name}-${version}-${os}-${arch}.${ext}
productName: 'ElectronMail'
publish: {provider: github, releaseType: draft, vPrefixedTagName: true}
forceCodeSigning: false

# native dependencies compiling gets triggered in ./scripts/prepare-native-deps.ts
npmRebuild: false

directories:
  output: ./dist
files:
  # TODO exclude not needed stuff in 'files:' section to reduce app packages size, can save megabytes, so a significant improvement
  - './app/**/*'
  - './package.json'
  - '!app/**/*/index-e2e.{js,cjs,mjs}'
  #- '!node_modules/{keytar,msgpackr-extract,sodium-native}/build${/*}'
  #- 'node_modules/{keytar,msgpackr-extract,sodium-native}/build/Release/*.node'
  - '!node_modules/{keytar,msgpackr-extract,sodium-native}/bin' # "bin" folder being generated by "electron-rebuild"
  - '!node_modules/{keytar,msgpackr-extract,sodium-native}/build/node_gyp_bins' # "bin" folder being generated by "electron-rebuild"
  - '!node_modules/sodium-native/{src,test,libsodium,tmp,deps}'
compression: normal
asar: true
asarUnpack:
  - './app/electron-main/*.node'
  - './node_modules/keytar/**/*'
  - './node_modules/msgpackr-extract/**/*'
  - './node_modules/sodium-native/**/*'
afterPack: './scripts/electron-builder/hooks/afterPack/index.cjs'

mac:
  icon: ./app/assets/icons/mac/icon.icns
  category: public.app-category.productivity
  darkModeSupport: true
  target:
    - {target: dmg}

dmg:
  icon: ./app/assets/icons/mac/icon.icns
  iconSize: 128
  contents:
    - {x: 380, y: 240, type: link, path: /Applications}
    - {x: 122, y: 240, type: file}

linux:
  icon: ./app/assets/icons/png
  category: Office
  packageCategory: Office
  desktop:
    StartupWMClass: electron-mail
  executableArgs:
    - '--js-flags="--max-old-space-size=12288"'

snap:
  confinement: strict
  stagePackages:
    - default
  plugs:
    - default
    - password-manager-service
  environment:
    DISABLE_WAYLAND: 1

win:
  artifactName: ${name}-${version}-windows-${arch}.${ext}
  icon: ./app/assets/icons/win/icon.ico
  target:
    - {target: nsis}

nsis:
  artifactName: ${name}-${version}-windows-${arch}-nsis-installer.${ext}
  oneClick: false
  perMachine: false
  include: scripts/electron-builder/installer.nsh


    тип Invalid configuration object. electron-builder 23.6.0 has been initialized using a configuration object that does not match the API schema.
 - configuration has an unknown property 'build'. These properties are valid:
   object { afterAllArtifactBuild?, afterPack?, afterSign?, apk?, appId?, appImage?, appx?, appxManifestCreated?, artifactBuildCompleted?, artifactBuildStarted?, artifactName?, asar?, asarUnpack?, beforeBuild?, beforePack?, buildDependenciesFromSource?, buildNumber?, buildVersion?, compression?, copyright?, cscKeyPassword?, cscLink?, deb?, defaultArch?, detectUpdateChannel?, directories?, dmg?, electronBranding?, electronCompile?, electronDist?, electronDownload?, electronUpdaterCompatibility?, electronVersion?, executableName?, extends?, extraFiles?, extraMetadata?, extraResources?, fileAssociations?, files?, flatpak?, forceCodeSigning?, framework?, freebsd?, generateUpdatesFilesForAllChannels?, icon?, includePdb?, includeSubNodeModules?, launchUiVersion?, linux?, mac?, mas?, masDev?, msi?, msiProjectCreated?, nodeGypRebuild?, nodeVersion?, npmArgs?, npmRebuild?, nsis?, nsisWeb?, onNodeModuleFile?, p5p?, pacman?, pkg?, portable?, productName?, protocols?, publish?, releaseInfo?, remoteBuild?, removePackageKeywords?, removePackageScripts?, rpm?, snap?, squirrelWindows?, target?, win?, $schema? }
   -> Configuration Options
     How to fix:
     1. Open https://www.electron.build/configuration/configuration
     2. Search the option name on the page (or type in into Search to find across the docs).
       * Not found? The option was deprecated or not exists (check spelling).
       * Found? Check that the option in the appropriate place. e.g. "title" only in the "dmg", not in the root.